plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly("org.springframework.boot:spring-boot-devtools")
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'mysql:mysql-connector-java:8.0.25'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.0.Final"
    implementation "org.mapstruct:mapstruct-jdk8:1.3.0.Final"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }

    all*.exclude group: 'org.apache.logging.log4j', module: "log4j-slf4j-impl"
}

sourceSets {
    main.java.srcDirs += "build/generated/source/apt/main"
}



ext {
    jacocoVersion = '0.7.5.201505241946'
    guavaVersion = '19.0'
    jadiraVersion = '4.0.0.GA'
    swaggerVersion = '2.3.0'
}


jar {
    dependsOn bootJar
}

bootJar {
    baseName = project.description

    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.JarLauncher',
                'Start-Class': 'com.persona.PersonaApplication',
                'Implementation-Version': project.version
    }
}

test {
    useJUnitPlatform()
}
